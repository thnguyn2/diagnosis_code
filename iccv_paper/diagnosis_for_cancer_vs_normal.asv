%function diagnosis_demo_based_on_core
%This function performs the analysis for the reactive stroma. It is
%mentioned that the normal tissue has more smooth muscle than the 
%Author: Tan H. Nguyen
%Last update: March 8th, 2015
%University of Illinois at Urbana-Chamapaign
    clc;
    clear all;
    close all;
    datafolder = 'G:\DiagnosisApril5th\diagnosis_of_vicky\';
    addpath('..\support');
    g3folder =strcat(datafolder,'g3\');
    nmfolder = strcat(datafolder,'nm\');
    g3files = dir(strcat(g3folder,'*_lbl_*g3.tif'));
    nmfiles = dir(strcat(nmfolder,'*_lbl_*nm.tif'));
    n3 = size(g3files,1); %Number of G3 samples
    nm = size(nmfiles,1); %Number of nm samples
    param.smallestlumenarea=5000;
    param.minglandarea = 5000;
    
    stromawidtharr = [3 5 10 15 20 25 30 35 40 50 60 70 80 90 100 110];
    %stromawidtharr = [120 130 140];
    obtain_auc_array = 0;
    nstromawidth = length(stromawidtharr);
    if (obtain_auc_array)
        for stromawidthidx = 1:nstromawidth
            stromawidth = stromawidtharr(stromawidthidx);
            disp(['Processing at width = ' num2str(stromawidth)])
            param.glswstd = 25; %Ls and g windows size
            param.stromawidth = stromawidth;
            param.cleftingwidth =90;
            ntextons = 50;
            textonfeat = zeros(0,ntextons);
            iter = 0 ;
            curn3=0;
            curnnm = 0;
            numericclass = zeros(0,1);
            g3textonfeat=zeros(0,ntextons);
            nmtextonfeat=zeros(0,ntextons);

            for idx=1:max(n3,nm)
            %for idx=105:105
                iter = iter+1;
                %Step 1: count the number of true glands and the number of lumen
                %each gland has
                %First, load the label map and cut out small fused regions. Make
                %sure that a slight fusion will not be detected as fused glands.
                %This seems to have been done in the code that generate the label
                %map.
                if (idx<=n3)
                    curg3filename = strcat(g3folder,g3files(idx).name);
                    res=process_single_core_g3_vs_nm(curg3filename,param);
                    disp(['G3 - ' g3files(idx).name]);
                    slashpos = strfind(g3files(idx).name,'_');
                    textonfeat(end+1,:)=res.hist_tex_idx(:)'; %Just look at the histogram of texton indices
                    g3textonfeat(end+1,:)=res.hist_tex_idx(:)';
                    curn3 = curn3+1;
                    numericclass(end+1,:)=3;
                end

                if (idx<=nm)
                    curnmfilename = strcat(nmfolder,nmfiles(idx).name);

                    res=process_single_core_g3_vs_nm(curnmfilename,param);
                     disp(['NM - ' nmfiles(idx).name]);
                    slashpos = strfind(nmfiles(idx).name,'_');
                    textonfeat(end+1,:)=res.hist_tex_idx(:)';
                    nmtextonfeat(end+1,:)=res.hist_tex_idx(:)';
                    curnnm = curnnm+1;
                    numericclass(end+1,:)=0;
                end

                class=numericclass>0;%Convert into true and false datatype

                figure(2)
                feat = textonfeat;

                %Next, try to spot out the texton that gives highest AUC for class
                %3 and nm and determine where to look for them
                texton_auc_arr = zeros(ntextons,1);
                for textonidx=1:ntextons
                        curfeat = feat(:,end+textonidx-ntextons);
                        b1 = glmfit(curfeat,class,'normal');%Generalized linear model
                        p1 = glmval(b1,curfeat,'logit');%Compute the fitted probability
                        [x1,y1,t,texton_auc_arr(textonidx)] = perfcurve(class,p1,true);%Compute the ROC curve by providing the groundtruth
                end

                figure(7);
                subplot(121);bar(texton_auc_arr);xlabel('Texton indices');ylabel('AUC values');
                %find 5 textons that has highest auc and display them
                [maxval,tex_idx_sorted]=sort(texton_auc_arr,'descend');
                %Compute the mean and the std of two classes
                mean_g3 = mean(g3textonfeat,1);
                std_g3 = std(g3textonfeat,0,1);
                mean_nm = mean(nmtextonfeat,1);
                std_nm = std(nmtextonfeat,0,1);
                subplot(122);
                errorbar([1:ntextons],mean_g3,std_g3,'or');
                hold on;
                errorbar([1:ntextons],mean_nm,std_nm,'^b');
                hold off;drawnow;
                legend('g3','nm');

                important_loc_mask = zeros(size(res.texidx));
                nimportfeat = 50;
                for featidx=1:nimportfeat
                    important_loc_mask = important_loc_mask + (res.texidx==tex_idx_sorted(featidx)).*maxval(featidx);
                end


                figure(8);
                cv_arr = 1-3*(std_g3+std_nm)./abs(mean_nm-mean_g3);
                plot(cv_arr);xlabel('texton index');ylabel('cv_ratio')
                title(strcat('CV ratio at width = ',num2str(stromawidth)));
                %imagesc(res.stromastrand.*important_loc_mask); drawnow;colorbar

                figure(3);
                subplot(121);imagesc(g3textonfeat);title('G3 carcinoma')
                subplot(122);imagesc(nmtextonfeat);title('Normal');
                drawnow;



            end
            save(strcat('cancer_vs_normal_texton_feat_around_stroma_dist_',num2str(stromawidth),'.mat'),...
                'nmtextonfeat','g3textonfeat','texton_auc_arr','mean_g3','mean_nm','std_g3','std_nm','-v7.3');
        end
    end
    
    %
%end

