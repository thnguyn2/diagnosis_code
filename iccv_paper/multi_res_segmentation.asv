%This source code perform multi-resolution segmentation for glands vs
%stroma. First, it will swipe through all folder, look for two fuzzy map of
%class prob at two different radii. Combine it and produce a final
%segmentation map
clc;
clear all;
close all;
datapath = 'H:\TMA_cores_and_diagnosis\';
texton_dir=strcat(datapath,'texdir\');
label_dir=strcat(datapath,'label\2class_results\');

addpath(strcat(cd(cd('..')),'\support'));
[filenames,glandnames,classlist,alltiffilelist]=findFileNameFromROIs(datapath);
radius1 = 60;
radius2 = 90;
ngrades = size(filenames,1);

%The following parameters are good for diagnosis
glandthresh=0.42;
stromathresh=0.5;

%The following parameters are for the segmentation accuracy
%glandthresh=0.50;
%stromathresh=0.55;
fullcf = zeros(3,3);
colorarr = 'rbgykm';
retrain = 1;
fillinlumeninsideglandandstroma = 1
for fileidx = 1:length(alltiffilelist)
                    cur_file_name = alltiffilelist{fileidx};
                    dot_pos = strfind(cur_file_name,'.'); %Get the position of the dot
                    slash_pos = strfind(cur_file_name,'\');
                    %label_name = cur_file_name(slash_pos(end)+1:dot_pos(1)-1);
                    label_name = 'O2';
                    disp(['Working on ' label_name ', Sample Idx: ' num2str(fileidx)])
                    seg_im_name_bf1 = strcat(label_dir,label_name,'_',num2str(radius1),'_2cl.tif');  
                    seg_im_name_bf2 = strcat(label_dir,label_name,'_',num2str(radius2),'_2cl.tif'); 
%                    seg_im_name_gt = strcat(label_dir,label_name,'_seg_gt_3072.tif'); %These are groundtruth for the segmentation
%                    seg_im_name_gt_hole_filled = strcat(label_dir,label_name,'_seg_gt_3072_hf.tif'); 
                    seg_im_name = strcat(label_dir,label_name,'_seg_multi_res.tif'); 
%                     fuzzy_lumen_minus = strcat(cur_file_name(1:end-4),'_seg_ws',num2str(radius2),'_fuzzy_lm.tif');%This is the fuzzy map with lumen pixels set to p = -1
%                     if (~exist(fuzzy_lumen_minus))
%                         %Interpolate to get rid of small wrong lumen area
%                         fuzzymap = imread(seg_im_name_bf2);
%                         fuzzymap = cast(fuzzymap,'double');
%                         figure(1);
%                         subplot(121);imagesc(fuzzymap);
%                         lumenmap= (fuzzymap==0);
%                         newlumenmap = bwareaopen(lumenmap,4000);
%                         tofilllumenmap = im2bw(lumenmap-newlumenmap);
%                         [tofillrow,tofillcol]=find(tofilllumenmap==1);
%                         [nonlumenrow,nonlumencol]=find(fuzzymap>0);
%                         nonlumenidx = find(fuzzymap>0);
%                         F = scatteredInterpolant(nonlumencol,nonlumenrow,fuzzymap(nonlumenidx));
%                         interpval = F(tofillcol,tofillrow);
%                         fuzzymap(tofilllumenmap==1)=interpval;
%                         fuzzymap(newlumenmap==1)=-1;
%                         fuzzymap = cast(fuzzymap,'single');
%                         subplot(122);imagesc(fuzzymap);colormap jet
%                         writeTIFF(fuzzymap,fuzzy_lumen_minus);                        
%                 
%                     end
%                     if (~exist(seg_im_name_gt_hole_filled)&exist(seg_im_name_gt)&(fillinlumeninsideglandandstroma==1))
%                         curlbl = imread(seg_im_name_gt);
%                         figure(1);
%                         subplot(121);imagesc(curlbl)
%                         glandim = (curlbl==1);
%                         glandinv = 1-glandim;
%                         glandinv=bwareaopen(glandinv,5000);
%                         glandim = 1-glandinv;
%                         stromaim = (curlbl==2);
%                         stromainv =1 -stromaim;
%                         stromainv = bwareaopen(stromainv,5000);
%                         stromaim = 1-stromainv;
%                         newlbl = min(glandim + 2*stromaim,2);
%                         subplot(122);imagesc(newlbl);
%                         writeTIFF(newlbl,seg_im_name_gt_hole_filled);                        
%                     end
%                     if (~exist(seg_im_name_hole_filled)&(fillinlumeninsideglandandstroma==1))
%                         curlbl = imread(seg_im_name);
%                         figure(1);
%                         subplot(121);imagesc(curlbl)
%                         glandim = (curlbl==1);
%                         glandinv = 1-glandim;
%                         glandinv=bwareaopen(glandinv,5000);
%                         glandim = 1-glandinv;
%                         stromaim = (curlbl==2);
%                         stromainv =1 -stromaim;
%                         stromainv = bwareaopen(stromainv,5000);
%                         stromaim = 1-stromainv;
%                         newlbl = min(glandim + 2*stromaim,2);
%                         subplot(122);imagesc(newlbl);
%                         writeTIFF(newlbl,seg_im_name_hole_filled);                        
%                     end
                    if ((exist(seg_im_name_bf1)&exist(seg_im_name_bf2)&(~exist(seg_im_name)))|(retrain==1))
                        fmap_1=imread(seg_im_name_bf1); %Read the first map
                        %fmap_1 = bilateralFilter(fmap_1,'SigmaColor',0.1,'SigmaSpace',5);
                               
                        fmap_2=imread(seg_im_name_bf2); %Read the first map
                        %fmap_2 = bilateralFilter(fmap_2,'SigmaColor',0.1,'SigmaSpace',40);
                     
                        lblim_bf=zeros(size(fmap_1)); %This is the new segmentation_map
                        nonlumenidx=find(fmap_1~=0);
                        glandidx=intersect(find(fmap_2<glandthresh),nonlumenidx); %Get the map for gland, make sure we are confident enough on the result

                        glandmap = zeros(size(fmap_1));
                        %Try to make sure that all glands we make are
                        %correct. It's better to underestimate it
                        %rather than overrestimate it.
                        glandmap(glandidx)=1;
                        glandmap =bwareaopen(glandmap,1000);
                        %Elminate very small hole inside the gland
                        glandmapinv = 1-glandmap;
                        glandmapinv = bwareaopen(glandmapinv,1000);%Eliminate all the holes in glands. Set this number larger will eliminate larger hole
                        glandmap = 1-glandmapinv;
                        glandmap = imopen(glandmap,strel('disk',10));
                        glandidx = find(glandmap==1);
                        lblim_bf(glandidx)=1;
                        %Remove very small gland area
                        lblim_open = bwareaopen(lblim_bf,5000);
                        lblim_bf = lblim_open + 2*(lblim_bf-lblim_open);%Set the difference pixels to stroma
                        
                        %Now, work on stroma region
                        stromaidx = intersect(find(fmap_2>stromathresh-0.1),nonlumenidx);
                        stromamap = zeros(size(fmap_1));
                        stromamap(stromaidx)=1;
                        stromamap2 = imdilate(stromamap,strel('disk',15));
                        stromamapinv=1-stromamap;
                        stromamapinv=bwareaopen(stromamapinv,2000); %Get rid of small holes in stroma
                        stromamap = 1-stromamapinv;
                        stromaidx = find(stromamap==1);
                        lblim_bf(stromaidx)=2;
                        
%                         non_det_idx = intersect(find(fmap_1~=0),find(lblim_bf==0));%Find all unsure region
%                         stromaidx2 = intersect(find(fmap_1>0.5),non_det_idx);
%                         lblim_bf(stromaidx2)=2;
                        
                        figure(1);
                        subplot(121);imagesc(fmap_1);title('Scale 1');
                        subplot(122);imagesc(fmap_2);title('Scale 2');drawnow
                        figure(2)
                        imagesc(lblim_bf);title('Current multi-res segmentation');drawnow;
                        nonlumenidx = find(lblim_bf~=0);
                        writeTIFF(lblim_bf,seg_im_name);

                    end
               
   end
%  fullcf_disp = fullcf./repmat(sum(fullcf,2),1,3);
  %save(strcat('.\confusionmatrices\fullcf.mat'),'fullcf','fullcf_disp');
           
                 
