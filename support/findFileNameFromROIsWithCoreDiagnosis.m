function [filenames,glandnames,diagres,alltiffilelist]=findFileNameFromROIsWithCoreDiagnosis(allcorepath)
    %This file search for all the file names of the glands and the raw data
    %given the list of ROI
    %Author: Tan H. Nguyen
    %University of Illinois at Urbana-Champaign
    %Inputs
    %   dirpath: path to the searching folder. Inside this folder, we must
    %   have a subfolder named 'Verified_rois' containing all the ROIs
    %Outputs:
    %   filenames, glandnames: 2 cells containing the file names of the
    %   core and the name of the glands (generated by the ROIS)
    %   tiffilelist: all the name of the cores, without needing the ROIs
    %------------------------------------------------------------
    roipath = strcat(allcorepath,'Verified_rois_on_cores/Verified_diagnosis_results/');
     %First, look for the list of all cores
     %Look for all file names
    filenames =  dir(strcat(roipath,'*.zip'));
    nfiles = length(filenames);
    filelist = cell(0,1);
    gradelistnopath = cell(0,1);
    for filenameidx=1:nfiles
        filelist{end+1,1} =strcat(roipath,filenames(filenameidx,1).name);
        gradelistnopath = cell(0,1);
    end
    
    %Step 2: Search for all tif files in all folders
    tiffilelist = cell(0,1);
    tiffilelistnopath = cell(0,1);
    tiffilelist_with_dash=cell(0,1);
    tiffilelist_no_gland =cell(0,1);
    tiffilelistnopath_with_dash =cell(0,1);
    
    folderlist = dir(strcat(allcorepath,'d*'));%List all subfolders in the current folder
    nfolders = size(folderlist,1);%Number of subfolder
    for folderidx=1:nfolders
        curfoldername = strcat(allcorepath,folderlist(folderidx,1).name,'/');
        %Search all the tif files in the current folder
        tiffilenames = dir(strcat(curfoldername,'*.tif'));
        tiffilenames_with_dash=dir(strcat(curfoldername,'*_*.tif'));
        for tiffileidx=1:size(tiffilenames,1)
            curtiffilename = tiffilenames(tiffileidx,1).name;
            tiffilelistnopath{end+1,1}=curtiffilename;
            tiffilelist{end+1,1} =strcat(curfoldername,tiffilenames(tiffileidx,1).name);

            if (isempty(strfind(curtiffilename,'Gland'))==1)
                   tiffilelist_no_gland{end+1,1} =strcat(curfoldername,tiffilenames(tiffileidx,1).name);

            end

        end
        for tiffileidx=1:size(tiffilenames_with_dash,1)
            tiffilelistnopath_with_dash{end+1,1}=tiffilenames_with_dash(tiffileidx,1).name;
            tiffilelist_with_dash{end+1,1} =strcat(curfoldername,tiffilenames_with_dash(tiffileidx,1).name);
        end
        
    end
    alltiffilelist=setdiff(tiffilelist_no_gland,tiffilelist_with_dash);

    ntiffiles = size(tiffilelist,1);
    h = waitbar(0,'Processing data...');
    matchingidx=zeros(nfiles,1);
    for fileIdx = 1:nfiles%Go through all zip files
        waitbar(fileIdx/nfiles,h,'Progress...')
        cur_file_name = filelist{fileIdx,1};
        waitbar(fileIdx/nfiles,h,'Progress...')
        dot_pos = strfind(cur_file_name,'.'); %Get the position of the dot
        slash_pos = strfind(cur_file_name,'/');
        ubar_pos = strfind(cur_file_name,'_S');
        if (isempty(ubar_pos))%This is the gland case
            label_name = cur_file_name(slash_pos(end)+1:dot_pos(1)-1);
        else %This is the stroma case
            label_name = cur_file_name(slash_pos(end)+1:ubar_pos(1)-1);
        
        end
        %disp(['Working on ' label_name]);
        gradelistnopath{end+1,1} = label_name(1:2);%Get the list of the samples
        label_name = label_name(3:end); %Truncate the first 2 characters, which are for Gleason grading
        %Generate the tif file name to search
        tif_name = strcat(label_name,'.tif');
        %Search for match tif file
        foundidx=-1;
        for tiffileidx=1:ntiffiles
            if (strcmp(tif_name,tiffilelistnopath{tiffileidx,1}))
                foundidx=tiffileidx;
                break;
            end
        end
        matchingidx(fileIdx)=foundidx;
        if (foundidx==-1)
            disp(['Can not find tif image of: ' cur_file_name]);
        end
        
       
    end
    gradelist = unique(gradelistnopath);
    ngrades = length(gradelist(:));
    
    filenames = cell(ngrades,1);
    glandnames = cell(ngrades,1);
    diagres = cell(ngrades,1);
    reupdatesmallsize = 0;
    for gradelistidx=1:ngrades
        diagres{gradelistidx,1}=gradelist{gradelistidx};
        curidx = find(strcmp(gradelistnopath,gradelist{gradelistidx}));%Get the indices of all samples with current grade
        curfilenames = cell(0,1);
        curglandnames = cell(0,1);
        resizeimname = cell(0,1);
        for sampleidx=1:length(curidx);
            if (matchingidx(curidx(sampleidx))>0)
                curname = tiffilelist{matchingidx(curidx(sampleidx)),1};
                disp(curname)
                curfilenames{end+1,1}=curname;
                curglandnames{end+1,1}=strcat(curname(1:end-4),'Glands.tif');
                resizeimname{end+1,1}=strcat(curname(1:end-4),'_small.tif');
                if ((~exist(resizeimname{end,1}))|(reupdatesmallsize))
                    im = imread(curfilenames{end,1});
                    im = cast(im,'uint16');
                    im = imresize(im,[3072 3072]);
                    figure(1);
                    imagesc(im);
                    writeTIFF(im,resizeimname{end,1},'uint16');
                end
            end
        end
        filenames{gradelistidx,1}=curfilenames;
        glandnames{gradelistidx,1}=curglandnames;
        
    end
    close(h);
end

